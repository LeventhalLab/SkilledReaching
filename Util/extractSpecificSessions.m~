function sessionTableOut = extractSpecificSessions(sessionTable,sessions_to_extract)
%
% INPUTS
%   sessionTable - table of information about each session in the skilled reaching
%       experiment
%   sessions_to_extract - structure with fields that match with sessionTable column
%       headers
%
% OUTPUTS
%   sessionTableOut - table of rows from sessionTable that match with experimentInfo


% divide sessionTable into blocks of similar sessions
sessionBlockLabels = identifySessionTransitions(sessionTable);
sessions_remaining = calcSessionsRemainingFromBlockLabels(sessionBlockLabels);

sessionFields = fieldnames(sessions_to_extract);
% sessionTableOut = sessionTable;

validRows = false(size(sessionTable,1));
for iSession = 1 : length(sessions_to_extract)
    
    session_validRows = false(size(sessionTable,1));
    
    for iField = 1 : length(sessionFields)
        temp_validRows = false(size(sessionTable,1));
        switch sessions_to_extract(iSession).(sessionFields{iField})
            case 'sessions_remaining'
                temp_validRows(sessions_remaining == sessions_to_extract(iSession).sessions_remaining) = true;
            otherwise
                temp_validRows(sessionTable.(sessions_to_extract{iField}) == sessions_to_extract(iSession).(sessions_to_extract{iField}))
        end

        % if field value is irrelevant, don't pull out any rows
        if strcmpi(experimentInfo.(exptFields{iField}),'any')
            continue;
        end

        ratTableOut = extractTableRows(ratTableOut,exptFields{iField},experimentInfo.(exptFields{iField}));

    end