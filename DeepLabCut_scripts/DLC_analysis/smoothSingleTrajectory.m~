function [frameIdx,reachTrajectory] = smoothSingleTrajectory(trajectory, varargin)
%
% INPUTS

windowLength = 10;
smoothMethod = 'gaussian';

firstValidPoint = find(~isnan(trajectory(:,1)),1,'first');
lastValidPoint = find(~isnan(fullTrajectory(:,1)),1,'last');
numPoints = lastValidPoint - firstValidPoint + 1;
interp_trajectory = zeros(numPoints,3);
for iDim = 1 : 3
    x = find(~isnan(fullTrajectory(:,iDim)));
    xq = x(1) : x(end);
    interp_trajectory(:,iDim) = pchip(x,smoothedTrajectory(x,iDim),xq);
end